/**  @page gpio_page GPIO Controller

  System-on-Chip based on River CPU provides additional periphery module GPIO 
Controller (\c axi4_gpio). This modules instantiates \c width number of bi-directional pins,
where \c width is the generic parameter which is equal to 12 for all used fpga boards
(4 LEDs + 8 User defined DIPs). ALL GPIOs connected via bi-directional buffer
with the Z-state and can be programmed as inputs or outputs.

  Default ASIC configuraton supposes that all GPIO will be configures as input pins
after hard reset but for the FPGA targets GPIOs are splitted on input connected 
to User's DIP switch and output connected to LEDs so the hard reset state
state may differs from default configuration.

 @section gpio_boot_config_section Boot Loader Configuration

  GPIOs pins is used to pass some configuration and select desired behaviour
of program loaded into Boot ROM. There're plenty number of possible
images that can be used as boot image as available in folder \c examples
ether as not available:

  \li <c>examples/boot/*</c>. Demonstration ROM image starting user application.
  \li <c>examples/bootrom_tests/*</c>. Self test application running directly from ROM
  \li <c>examples/sysboot/*</c>. Full functional ASIC boot loader.
  \li Other custom application.

 Depending of the used ROM program there're may be the following GPIO
pins assignment:

| GPIO[2] | GPIO[1] | GPIO[0] | 
|:-------:|:-------:|:-------:|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| 0       | 0       | 0       | 
| 0       | 0       | 1       | 
| 0       | 1       | 0       | 
| 0       | 1       | 1       | 
| 1       | *       | *       | 
 
 @section gpio_regs GPIO registers mapping

 GPIO Controller acts like a slave AMBA AXI4 device that is directly mapped
 into physical memory. Default address location for our implementation 
 is defined by 0x80000000. Memory size is 4 KB.

 @par LED register (0x000).

 |Bits|Type| Reset |Field Name| Bits  | Description 
 |:--:|:--:|:-----:|:---------|:-----:|:------------------------------------------------------------|
 | 24 | RW | 24h'0 | rsrv     | 24    | Reserved
 | 8  | RW | 8h'0  | led      | 7:0   | <b>LEDs</b>. Written value directly assigned on SoC output pins and can be used as test signals.

 @par DIP register (0x004).

 |Bits|Type| Reset |Field Name| Bits  | Description 
 |:--:|:--:|:-----:|:---------|:-----:|:------------------------------------------------------------|
 | 28 | RO | 28h'0 | rsrv     | 28    | Reserved
 | 4  | RO | -     | dip      | 3:0   | <b>DIPs</b>. Input configuration pins value (Read-Only). Configuration pin meaning depends of the used FW.

 @par Set of temporary registers (0x008).

 |Offset |Bits|Type| Reset | Name | Definition 
 |:------|:--:|:--:|:-----:|:----:|---------------------------------------------|
 |0x008  | 32 | RW | 32h'0 | reg32_2 | <b>Temporary register 2</b>. FW specific register used for debugging purposes.
 |0x00C  | 32 | RW | 32h'0 | reg32_3 | <b>Temporary register 3</b>.
 |0x010  | 32 | RW | 32h'0 | reg32_4 | <b>Temporary register 4</b>.
 |0x014  | 32 | RW | 32h'0 | reg32_5 | <b>Temporary register 5</b>.
 |0x018  | 32 | RW | 32h'0 | reg32_6 | <b>Temporary register 6</b>.

*/
